@page "/"
@page "/Locations"

@using FieldServiceOrganizer.Server.Services
@using FieldServiceOrganizer.Models

@inject ICosmosDbService CosmosDbService
@inject IMelissaApiService MelissaApiService

<h3>LocationList</h3>

@if (TotalSelected < 5)
{
    <span class="text-success">@TotalSelected of 5 selected</span>
}
else if (TotalSelected == 5)
{
    <span class="text-danger">@TotalSelected of 5 selected</span>
}
else
{
    <span class="text-danger">Too many locations selected - maximum of 5</span>
}

<div class="container col-lg-12">
    <div class="row">
        <div class="col-lg-8">
            <Syncfusion.Blazor.Grids.SfGrid @ref="Grid"
                                            DataSource="@Locations"
                                            AllowPaging="true"
                                            AllowSorting="true"
                                            AllowFiltering="true"
                                            Toolbar="@(new List<string>() {"Add"})">

                <GridEvents TValue="Location"
                            CommandClicked="OnCommandClicked"
                            OnActionBegin="OnActionBeginHandler"
                            RowSelected="GetSelectedRecords"
                            RowDeselected="RowDeselectHandler">
                </GridEvents>

                <GridSelectionSettings Type="SelectionType.Multiple"
                                       PersistSelection="true"
                                       EnableToggle="true">
                </GridSelectionSettings>

                <GridPageSettings PageSize="10"></GridPageSettings>

                <GridEditSettings AllowAdding="true"
                                  Mode="EditMode.Dialog"
                                  AllowDeleting="true"
                                  ShowDeleteConfirmDialog="true">
                </GridEditSettings>
                <GridTemplates>
                    <DetailTemplate>
                        @{ 
                            Location location = context as Location;
                        }
                        <Syncfusion.Blazor.Navigations.SfTab Heitht ="350" HeaderPlacement="Syncfusion.Blazor.Navigations.HeaderPosition.Top">
                            <Syncfusion.Blazor.Navigations.TabItems>
                                <Syncfusion.Blazor.Navigations.TabItem>
                                    <ChildContent>
                                        <Syncfusion.Blazor.Navigations.TabHeader Text="Details"></Syncfusion.Blazor.Navigations.TabHeader>
                                    </ChildContent>
                                    <ContentTemplate>
                                        <div style="padding:12px">
                                            <div>Id: @location.Id</div>
                                            <div>Direction: @location.Direction</div>
                                            <div>Street Number: @location.StreetNumber</div>
                                            <div>Street: @location.Street</div>
                                            <div>Unit: @location.Unit</div>
                                            <div>Latitude: @location.Latitude</div>
                                            <div>Longitude: @location.Longitude</div>

                                        </div>
                                    </ContentTemplate>
                                </Syncfusion.Blazor.Navigations.TabItem>
                                <Syncfusion.Blazor.Navigations.TabItem>
                                    <ChildContent>
                                        <Syncfusion.Blazor.Navigations.TabHeader Text="Map"></Syncfusion.Blazor.Navigations.TabHeader>
                                    </ChildContent>
                                    <ContentTemplate>
                                        <div style="padding:12px">
                                            <div style="height:260px; width:450px;float:left">
                                               
                                            </div>

                                        </div>
                                    </ContentTemplate>
                                </Syncfusion.Blazor.Navigations.TabItem>
                            </Syncfusion.Blazor.Navigations.TabItems>
                        </Syncfusion.Blazor.Navigations.SfTab>
                    </DetailTemplate>
                </GridTemplates>

                <GridColumns>

                    <GridColumn Type="ColumnType.CheckBox" Width="25"></GridColumn>

                    <GridColumn Field="@nameof(Location.Id)"
                                HeaderText="Location ID"
                                IsPrimaryKey="true"
                                Width="180"
                                Visible="false">
                    </GridColumn>

                    <GridColumn Field="@nameof(Location.OccupantName)"
                                HeaderText="Location"
                                Width="120"
                                ValidationRules="@(new ValidationRules { Required = true })">
                    </GridColumn>

                    <GridColumn Field="@nameof(Location.FullAddress)"
                                HeaderText="Address"
                                Width="130"
                                ValidationRules="@(new ValidationRules { Required = true })">
                    </GridColumn>

                    <GridColumn Field="@nameof(Location.City)"
                                HeaderText="City"
                                Width="80"
                                ValidationRules="@(new ValidationRules { Required = true })">
                    </GridColumn>

                    <GridColumn Field="@nameof(Location.State)"
                                HeaderText="State"
                                Width="40"
                                ValidationRules="@(new ValidationRules { Required = true })">
                    </GridColumn>

                    <GridColumn Field="@nameof(Location.Zip)"
                                HeaderText="Zip"
                                Width="60">
                    </GridColumn>

                    <GridColumn HeaderText="Delete" Width="38">
                        <GridCommandColumns>
                            <GridCommandColumn Type="CommandButtonType.Delete"
                                               ButtonOption="@(new CommandButtonOptions()
                                                   {
                                                       IconCss="e-icons e-delete", CssClass="e-flat"
                                                   })">
                            </GridCommandColumn>
                        </GridCommandColumns>
                    </GridColumn>
                </GridColumns>
            </Syncfusion.Blazor.Grids.SfGrid>
            </div>

            <div class="col-lg-4 badge badge-warning">
                <h5>Selected Locations</h5>
                <Syncfusion.Blazor.Grids.SfGrid DataSource="@SelectedLocations">
                    <GridColumns>
                        <GridColumn Field="@nameof(Location.OccupantName)" Width="120"></GridColumn>
                    </GridColumns>
                </Syncfusion.Blazor.Grids.SfGrid>
                @if ( TotalSelected > 2 && TotalSelected < 6 && !RouteCalculated )
                {
                    <div class="spinner-grow">
                        <button class="btn btn-dark" @onclick="FindRouteHandler">Find Best Route</button>
                    </div>
                }
                @if ( RouteCalculated )
                {
                        <h5>Most efficient route:</h5>
                        <table class="table table-bordered">
                            <thead>
                                <tr>
                                    <th>From</th>
                                    <th>To</th>
                                    <th>Minutes</th>
                                    <th>Miles</th>
                                </tr>
                            </thead>
                            <tbody>
                                @for (int i = 0; i <= CalculatedRoute.FastestRoute.Count; i++)
                                {
                                    @if (i == 0)  
                                    {
                                        <tr>
                                            <td class="text-wrap">Home Base</td>
                                            <td class="text-wrap">@CalculatedRoute.FastestRoute[0].OccupantName</td>
                                            <td class="text-wrap">
                                                @(CalculatedRoute.FindRelatedDistanceNode(CalculatedRoute.HomeBase, CalculatedRoute.FastestRoute[0])
                                                             .TimeInSeconds/60) Minutes
                                            </td>
                                            <td class="text-wrap">
                                                @(CalculatedRoute.FindRelatedDistanceNode(CalculatedRoute.HomeBase, CalculatedRoute.FastestRoute[0])
                                                             .DistanceInFeet/5280) Miles
                                            </td>
                                        </tr>
                                     }

                                     else if ( i != CalculatedRoute.FastestRoute.Count)
                                     {
                                        <tr>
                                            <td class="text-wrap">@CalculatedRoute.FastestRoute[i - 1].OccupantName</td>
                                            <td class="text-wrap">@CalculatedRoute.FastestRoute[i].OccupantName</td>
                                            <td class="text-wrap">
                                                @(CalculatedRoute.FindRelatedDistanceNode(CalculatedRoute.FastestRoute[i], CalculatedRoute.FastestRoute[i-1])
                                                             .TimeInSeconds/60) Minutes
                                            </td>
                                            <td class="text-wrap">
                                                @(CalculatedRoute.FindRelatedDistanceNode(CalculatedRoute.FastestRoute[i], CalculatedRoute.FastestRoute[i - 1])
                                                             .DistanceInFeet/5280) Miles
                                            </td>
                                        </tr>
                                     }

                                     @if (i == CalculatedRoute.FastestRoute.Count)
                                     {
                                         <tr>
                                             <td class="text-wrap">@CalculatedRoute.FastestRoute[i - 1].OccupantName</td>
                                             <td class="text-wrap">Home Base</td>
                                             <td class="text-wrap">
                                                 @(CalculatedRoute.FindRelatedDistanceNode(CalculatedRoute.HomeBase, CalculatedRoute.FastestRoute[i - 1])
                                                                     .TimeInSeconds/60) Minutes
                                             </td>
                                             <td class="text-wrap">
                                                 @(CalculatedRoute.FindRelatedDistanceNode(CalculatedRoute.HomeBase, CalculatedRoute.FastestRoute[i - 1])
                                                                     .DistanceInFeet/5280) Miles
                                             </td>
                                         </tr>
                                     }

                                }

                            </tbody>
                        </table>
                        <p>Total travel time: @(MinTimeInSeconds/60) minutes</p>

                        <Syncfusion.Blazor.Buttons.SfButton content="Clear Route" @onclick="ClearRoute"></Syncfusion.Blazor.Buttons.SfButton>
                }

            </div>
    </div>
</div>




